CREATE PROCEDURE Patient_Filter_1 @temptable TestTableType
AS
BEGIN
	BEGIN TRY
			DECLARE @SOURCE_PROC NVARCHAR(50) = 'Patient_Filter_1' , @ETL_EVENT_DATE NVARCHAR(50) = SYSDATETIME(), @ETL_EVENT_DETAILS NVARCHAR(50) = 'MODIFY'
			-- begin tran @patientFilter1

			INSERT INTO ERROREVENT(ERRORID, SOURCE_ID, SOURCE_TABLE, FILTERID, [DATETIME], [ACTION])
			SELECT NEXT VALUE FOR ERRORID_SEQ, PatientID, 'PATIENT', 1, (SELECT SYSDATETIME()), 'MODIFY'
			FROM @temptable
			WHERE YEAR(@temptable.DOB)>YEAR(SYSDATETIME());
			
			--ANY ERRORS GOES INTO THE ERROR TABLE
			INSERT INTO ETL_LOG ( SOURCE_PROCEDURE, ETL_EVENT_DATETIME, EVENT_DETAILS) 
			VALUES (@SOURCE_PROC, @ETL_EVENT_DATE, @ETL_EVENT_DETAILS);
			-- commit tran @patientFilter1
	END TRY
	BEGIN CATCH
			--IF THERE IS AN ERROR THROW IN TO THE LOG TABLE

			 BEGIN
				-- rollback tran @patientFilter1
                DECLARE @ERRORMESSAGE NVARCHAR(MAX) = ERROR_MESSAGE();
                INSERT INTO ETL_LOG ( SOURCE_PROCEDURE, ETL_EVENT_DATETIME, EVENT_DETAILS) 
				VALUES (@SOURCE_PROC, @ETL_EVENT_DATE, @ERRORMESSAGE);
			 END; 
	END CATCH

END