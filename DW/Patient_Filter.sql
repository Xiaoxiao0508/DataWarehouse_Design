
USE hospital
drop type if exists TestTableType_1;
CREATE type TestTableType_1 as TABLE
(
    URNumber NVARCHAR(50) NOT NULL,
    Gender NVARCHAR(50) NOT NULL,
    DOB DATE NOT NULL,
    Suburb NVARCHAR(50) NOT NULL,
    PostCode NVARCHAR(4) NOT NULL,
    CountryOfBirth NVARCHAR(50) NOT NULL,
    PreferredLanguage NVARCHAR(50) NOT NULL,
    LivesAlone BIT NOT NULL,
    Active BIT NOT NULL
);
GO
IF OBJECT_ID('ETL_NHRM_PATIENT_FILTER1 ') IS NOT NULL
DROP PROCEDURE  ETL_NHRM_PATIENT_FILTER1 ;
GO
-- CREATE PROCEDURE ETL_NHRM_PATIENT_FILTER1 @temp_table TestTableType readonly
CREATE PROCEDURE ETL_NHRM_PATIENT_FILTER1 @temp_table TestTableType_1 AS
BEGIN
	BEGIN TRY
			DECLARE @SOURCE_PROC NVARCHAR(50) = 'ETL_NHRM_PATIENT_FILTER1' , @ETL_EVENT_DATE NVARCHAR(50) = SYSDATETIME(), @ETL_EVENT_DETAILS NVARCHAR(50) = 'MODIFY'
			-- begin tran @patientFilter1

			INSERT INTO ERROREVENT(ERRORID, SOURCE_ID, SOURCE_TABLE, FILTERID, [DATETIME], [ACTION])
			SELECT NEXT VALUE FOR ERRORID_SEQ, URNumber, 'PATIENT', 1, (SELECT SYSDATETIME()), 'MODIFY'
			FROM @temp_table
			WHERE YEAR(@temp_table.DOB)>YEAR(SYSDATETIME());
			
			--ANY ERRORS GOES INTO THE ERROR TABLE
			INSERT INTO ETL_LOG (SOURCE_PROCEDURE, ETL_EVENT_DATETIME, EVENT_DETAILS) 
			VALUES (@SOURCE_PROC, @ETL_EVENT_DATE, @ETL_EVENT_DETAILS);
			-- commit tran @patientFilter1
	END TRY
	BEGIN CATCH
			--IF THERE IS AN ERROR THROW IN TO THE LOG TABLE

			 BEGIN
				-- rollback tran @patientFilter1
                DECLARE @ERRORMESSAGE NVARCHAR(MAX) = ERROR_MESSAGE();
                INSERT INTO ETL_LOG ( SOURCE_PROCEDURE, ETL_EVENT_DATETIME, EVENT_DETAILS) 
				VALUES (@SOURCE_PROC, @ETL_EVENT_DATE, @ERRORMESSAGE);
			 END; 
	END CATCH

END


-- SELECT * FROM ETL_LOG